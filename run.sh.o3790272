Variable OMP_NUM_THREADS has been set to 24
--------------------
Hostname: rdg8
Tue Aug 13 22:41:20 BST 2024
Free GPU: 0 of 2
--------------------
GPU0: [92mNot in use.[39m
GPU1: [92mNot in use.[39m

User: [91mec23779[39m JobID: [91m3790254[39m GPU Allocation: [91m1[39m Queue: [91mshort.q[39m
User: [91macw773[39m JobID: [91m3790210[39m GPU Allocation: [91m1[39m Queue: [91mshort.q[39m
User: [91macw572[39m JobID: [91m3790272[39m GPU Allocation: [91m2[39m Queue: [91mshort.q[39m
[91mWarning! GPUs requested but not used![39m
In main
[[36m2024-08-13 22:42:13,592[0m][[34mutils.utils[0m][[32mINFO[0m] - [rank: 0] Enforcing tags! <cfg.extras.enforce_tags=True>[0m
[[36m2024-08-13 22:42:13,603[0m][[34mutils.utils[0m][[32mINFO[0m] - [rank: 0] Printing config tree with Rich! <cfg.extras.print_config=True>[0m
CONFIG
├── data
│   └── _target_: src.data.fsd_datamodule.FSDDataModule                         
│       json_path: /data/scratch/acw572/LHGNN/datafiles/                        
│       data_dir: /data/EECS-MachineListeningLab/datasets/AudioSet              
│       meta_path: /data/EECS-MachineListeningLab/datasets/AudioSet/ground_truth
│       label_csv_pth: /data/scratch/acw572/LHGNN/datafiles/class_labels_indices
│       samplr_csv_pth: /data/scratch/acw572/LHGNN/datafiles/fsd50k_tr_full_weig
│       balance_samplr: true                                                    
│       batch_size: 15                                                          
│       num_workers: 8                                                          
│       pin_memory: true                                                        
│       persistent_workers: true                                                
│       sr: 16000                                                               
│       fmin: 20                                                                
│       fmax: 8000                                                              
│       num_mels: 128                                                           
│       window_type: hanning                                                    
│       target_len: 1024                                                        
│       freqm: 48                                                               
│       timem: 192                                                              
│       mixup: 0.5                                                              
│       norm_mean: -4.6476                                                      
│       norm_std: 4.5699                                                        
│       num_devices: 2                                                          
│                                                                               
├── model
│   └── _target_: src.models.tagging_module_test.TaggingModule                  
│       optimizer:                                                              
│         _target_: torch.optim.Adam                                            
│         _partial_: true                                                       
│         lr: 0.0005                                                            
│         weight_decay: 5.0e-07                                                 
│         eps: 1.0e-08                                                          
│         betas:                                                                
│         - 0.95                                                                
│         - 0.999                                                               
│       scheduler:                                                              
│         _target_: torch.optim.lr_scheduler.MultiStepLR                        
│         _partial_: true                                                       
│         milestones:                                                           
│         - 10                                                                  
│         - 15                                                                  
│         - 20                                                                  
│         - 25                                                                  
│         - 30                                                                  
│         - 35                                                                  
│         - 40                                                                  
│         gamma: 0.5                                                            
│       net:                                                                    
│         _target_: src.models.components.Hypergraph.HGCN                       
│         k: 25                                                                 
│         act: gelu                                                             
│         norm: batch                                                           
│         bias: true                                                            
│         dropout: 0.0                                                          
│         dilation: true                                                        
│         epsilon: 0.2                                                          
│         drop_path: 0.1                                                        
│         size: s                                                               
│         num_class: 200                                                        
│         emb_dims: 1024                                                        
│         freq_num: 128                                                         
│         time_num: 1024                                                        
│       compile: false                                                          
│       loss: bce                                                               
│       opt_warmup: true                                                        
│       learning_rate: 0.0005                                                   
│       lr_rate:                                                                
│       - 0.05                                                                  
│       - 0.02                                                                  
│       - 0.01                                                                  
│       - 0.005                                                                 
│       - 0.002                                                                 
│       - 0.001                                                                 
│       - 0.0005                                                                
│       - 0.0002                                                                
│       lr_scheduler_epoch:                                                     
│       - 10                                                                    
│       - 15                                                                    
│       - 20                                                                    
│       - 25                                                                    
│       - 30                                                                    
│       - 35                                                                    
│       - 50                                                                    
│       - 45                                                                    
│                                                                               
├── callbacks
│   └── model_checkpoint:                                                       
│         _target_: pytorch_lightning.callbacks.ModelCheckpoint                 
│         dirpath: /data/scratch/acw572/LHGNN/logs/train/runs/2024-08-13_22-42-1
│         filename: epoch_{epoch:03d}                                           
│         monitor: val/mAP                                                      
│         verbose: false                                                        
│         save_last: true                                                       
│         save_top_k: 20                                                        
│         mode: max                                                             
│         auto_insert_metric_name: false                                        
│         save_weights_only: false                                              
│         every_n_train_steps: null                                             
│         train_time_interval: null                                             
│         every_n_epochs: null                                                  
│         save_on_train_epoch_end: null                                         
│       early_stopping:                                                         
│         _target_: pytorch_lightning.callbacks.EarlyStopping                   
│         monitor: val/loss                                                     
│         min_delta: 0.0                                                        
│         patience: 5                                                           
│         verbose: false                                                        
│         mode: min                                                             
│         strict: true                                                          
│         check_finite: true                                                    
│         stopping_threshold: null                                              
│         divergence_threshold: null                                            
│         check_on_train_epoch_end: null                                        
│       model_summary:                                                          
│         _target_: pytorch_lightning.callbacks.RichModelSummary                
│         max_depth: -1                                                         
│       rich_progress_bar:                                                      
│         _target_: pytorch_lightning.callbacks.RichProgressBar                 
│                                                                               
├── logger
│   └── wandb:                                                                  
│         _target_: pytorch_lightning.loggers.WandbLogger                       
│         save_dir: /data/scratch/acw572/LHGNN/logs/train/runs/2024-08-13_22-42-
│         offline: false                                                        
│         id: null                                                              
│         anonymous: null                                                       
│         project: audioset-bal                                                 
│         log_model: false                                                      
│         prefix: ''                                                            
│         group: Tagging                                                        
│         tags:                                                                 
│         - fsd                                                                 
│         - hgcn                                                                
│         job_type: ''                                                          
│                                                                               
├── trainer
│   └── _target_: pytorch_lightning.trainer.Trainer                             
│       default_root_dir: /data/scratch/acw572/LHGNN/logs/train/runs/2024-08-13_
│       num_sanity_val_steps: 0                                                 
│       min_epochs: 30                                                          
│       max_epochs: 50                                                          
│       accelerator: gpu                                                        
│       devices: 2                                                              
│       gradient_clip_val: 0.5                                                  
│       precision: 32                                                           
│       detect_anomaly: false                                                   
│       check_val_every_n_epoch: 1                                              
│       deterministic: false                                                    
│       strategy: auto                                                          
│       num_nodes: 1                                                            
│       sync_batchnorm: false                                                   
│       use_distributed_sampler: false                                          
│                                                                               
├── paths
│   └── root_dir: /data/home/acw572/hgann/HGANN                                 
│       exp_dir: /data/scratch/acw572                                           
│       data_dir: /data/EECS-MachineListeningLab/datasets/AudioSet              
│       meta_dir: /data/EECS-MachineListeningLab/shubhr/hgann                   
│       log_dir: /data/scratch/acw572/LHGNN/logs/                               
│       output_dir: /data/scratch/acw572/LHGNN/logs/train/runs/2024-08-13_22-42-
│       work_dir: /data/home/acw572/hgann/HGANN                                 
│                                                                               
├── extras
│   └── ignore_warnings: false                                                  
│       enforce_tags: true                                                      
│       print_config: true                                                      
│                                                                               
├── task_name
│   └── train                                                                   
├── pretrained
│   └── img                                                                     
├── tags
│   └── ['dev']                                                                 
├── train
│   └── True                                                                    
├── eval
│   └── True                                                                    
├── wa
│   └── True                                                                    
├── ckpt_path
│   └── /data/EECS-MachineListeningLab/shubhr/imagenet_weights/model_best.pth.ta
└── seed
    └── None                                                                    
[[36m2024-08-13 22:42:13,756[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] In train[0m
[[36m2024-08-13 22:42:13,756[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Instantiating datamodule <src.data.fsd_datamodule.FSDDataModule>[0m
[[36m2024-08-13 22:42:15,617[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Instantiating model <src.models.tagging_module_test.TaggingModule>[0m
/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/utilities/parsing.py:198: Attribute 'net' is an instance of `nn.Module` and is already saved during checkpointing. It is recommended to ignore them using `self.save_hyperparameters(ignore=['net'])`.
norm is batch
bias is True
drop_path is 0.1
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
[[36m2024-08-13 22:42:44,003[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Loading img pretrained weights[0m
[[36m2024-08-13 22:42:44,003[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Instantiating callbacks...[0m
[[36m2024-08-13 22:42:44,004[0m][[34mutils.instantiators[0m][[32mINFO[0m] - [rank: 0] Instantiating callback <pytorch_lightning.callbacks.ModelCheckpoint>[0m
[[36m2024-08-13 22:42:44,007[0m][[34mutils.instantiators[0m][[32mINFO[0m] - [rank: 0] Instantiating callback <pytorch_lightning.callbacks.EarlyStopping>[0m
[[36m2024-08-13 22:42:44,008[0m][[34mutils.instantiators[0m][[32mINFO[0m] - [rank: 0] Instantiating callback <pytorch_lightning.callbacks.RichModelSummary>[0m
[[36m2024-08-13 22:42:44,008[0m][[34mutils.instantiators[0m][[32mINFO[0m] - [rank: 0] Instantiating callback <pytorch_lightning.callbacks.RichProgressBar>[0m
[[36m2024-08-13 22:42:44,009[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Instantiating loggers...[0m
[[36m2024-08-13 22:42:44,009[0m][[34mutils.instantiators[0m][[32mINFO[0m] - [rank: 0] Instantiating logger <pytorch_lightning.loggers.WandbLogger>[0m
[[36m2024-08-13 22:42:44,225[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Instantiating trainer <pytorch_lightning.trainer.Trainer>[0m
Trainer already configured with model summary callbacks: [<class 'pytorch_lightning.callbacks.rich_model_summary.RichModelSummary'>]. Skipping setting a default `ModelSummary` callback.
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
[[36m2024-08-13 22:42:44,419[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Logging hyperparameters![0m
wandb: Currently logged in as: shubhr. Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.6 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.16.1
wandb: Run data is saved locally in /data/scratch/acw572/LHGNN/logs/train/runs/2024-08-13_22-42-13/wandb/run-20240813_224246-tvs7jm5h
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run light-silence-26
wandb: ⭐️ View project at https://wandb.ai/shubhr/audioset-bal
wandb: 🚀 View run at https://wandb.ai/shubhr/audioset-bal/runs/tvs7jm5h
[[36m2024-08-13 22:43:08,594[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Starting training![0m
Initializing distributed: GLOBAL_RANK: 0, MEMBER: 1/2
Initializing distributed: GLOBAL_RANK: 1, MEMBER: 2/2
----------------------------------------------------------------------------------------------------
distributed_backend=nccl
All distributed processes registered. Starting with 2 processes
----------------------------------------------------------------------------------------------------

You are using a CUDA device ('NVIDIA A100 80GB PCIe') that has Tensor Cores. To properly utilize them, you should set `torch.set_float32_matmul_precision('medium' | 'high')` which will trade-off precision for performance. For more details, read https://pytorch.org/docs/stable/generated/torch.set_float32_matmul_precision.html#torch.set_float32_matmul_precision
LOCAL_RANK: 1 - CUDA_VISIBLE_DEVICES: [0,1]
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1]
┏━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━┳━━┓
┃   ┃ Name                                                              ┃ … ┃  ┃
┡━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━╇━━┩
│ 0 │ net                                                               │ … │  │
│ 1 │ net.proj                                                          │ … │  │
│ 2 │ net.stem                                                          │ … │  │
│ 3 │ net.stem.convs                                                    │ … │  │
│ 4 │ net.stem.convs.0                                                  │ … │  │
│ 5 │ net.stem.convs.1                                                  │ … │  │
│ 6 │ net.stem.convs.2                                                  │ … │  │
│ 7 │ net.stem.convs.3                                                  │ … │  │
│ 8 │ net.stem.convs.4                                                  │ … │  │
│ 9 │ net.stem.convs.5                                                  │ … │  │
│ … │ net.stem.convs.6                                                  │ … │  │
│ … │ net.stem.convs.7                                                  │ … │  │
│ … │ net.query_embed                                                   │ … │  │
│ … │ net.label_proj                                                    │ … │  │
│ … │ net.backbone                                                      │ … │  │
│ … │ net.backbone.0                                                    │ … │  │
│ … │ net.backbone.0.0                                                  │ … │  │
│ … │ net.backbone.0.0.fc1                                              │ … │  │
│ … │ net.backbone.0.0.fc1.0                                            │ … │  │
│ … │ net.backbone.0.0.fc1.1                                            │ … │  │
│ … │ net.backbone.0.0.graph_conv                                       │ … │  │
│ … │ net.backbone.0.0.graph_conv.gconv                                 │ … │  │
│ … │ net.backbone.0.0.graph_conv.gconv.nn                              │ … │  │
│ … │ net.backbone.0.0.graph_conv.gconv.nn.0                            │ … │  │
│ … │ net.backbone.0.0.graph_conv.gconv.nn.1                            │ … │  │
│ … │ net.backbone.0.0.graph_conv.gconv.nn.2                            │ … │  │
│ … │ net.backbone.0.0.graph_conv.gconv.get_centroids                   │ … │  │
│ … │ net.backbone.0.0.graph_conv.gconv.get_centroids.centers_proposal  │ … │  │
│ … │ net.backbone.0.0.graph_conv.dilated_knn_graph                     │ … │  │
│ … │ net.backbone.0.0.graph_conv.dilated_knn_graph._dilated            │ … │  │
│ … │ net.backbone.0.0.fc2                                              │ … │  │
│ … │ net.backbone.0.0.fc2.0                                            │ … │  │
│ … │ net.backbone.0.0.fc2.1                                            │ … │  │
│ … │ net.backbone.0.0.drop_path                                        │ … │  │
│ … │ net.backbone.0.1                                                  │ … │  │
│ … │ net.backbone.0.1.fc1                                              │ … │  │
│ … │ net.backbone.0.1.fc1.0                                            │ … │  │
│ … │ net.backbone.0.1.fc1.1                                            │ … │  │
│ … │ net.backbone.0.1.act                                              │ … │  │
│ … │ net.backbone.0.1.fc2                                              │ … │  │
│ … │ net.backbone.0.1.fc2.0                                            │ … │  │
│ … │ net.backbone.0.1.fc2.1                                            │ … │  │
│ … │ net.backbone.0.1.conv                                             │ … │  │
│ … │ net.backbone.0.1.conv.conv                                        │ … │  │
│ … │ net.backbone.0.1.drop_path                                        │ … │  │
│ … │ net.backbone.1                                                    │ … │  │
│ … │ net.backbone.1.0                                                  │ … │  │
│ … │ net.backbone.1.0.fc1                                              │ … │  │
│ … │ net.backbone.1.0.fc1.0                                            │ … │  │
│ … │ net.backbone.1.0.fc1.1                                            │ … │  │
│ … │ net.backbone.1.0.graph_conv                                       │ … │  │
│ … │ net.backbone.1.0.graph_conv.gconv                                 │ … │  │
│ … │ net.backbone.1.0.graph_conv.gconv.nn                              │ … │  │
│ … │ net.backbone.1.0.graph_conv.gconv.nn.0                            │ … │  │
│ … │ net.backbone.1.0.graph_conv.gconv.nn.1                            │ … │  │
│ … │ net.backbone.1.0.graph_conv.gconv.nn.2                            │ … │  │
│ … │ net.backbone.1.0.graph_conv.gconv.get_centroids                   │ … │  │
│ … │ net.backbone.1.0.graph_conv.gconv.get_centroids.centers_proposal  │ … │  │
│ … │ net.backbone.1.0.graph_conv.dilated_knn_graph                     │ … │  │
│ … │ net.backbone.1.0.graph_conv.dilated_knn_graph._dilated            │ … │  │
│ … │ net.backbone.1.0.fc2                                              │ … │  │
│ … │ net.backbone.1.0.fc2.0                                            │ … │  │
│ … │ net.backbone.1.0.fc2.1                                            │ … │  │
│ … │ net.backbone.1.0.drop_path                                        │ … │  │
│ … │ net.backbone.1.1                                                  │ … │  │
│ … │ net.backbone.1.1.fc1                                              │ … │  │
│ … │ net.backbone.1.1.fc1.0                                            │ … │  │
│ … │ net.backbone.1.1.fc1.1                                            │ … │  │
│ … │ net.backbone.1.1.act                                              │ … │  │
│ … │ net.backbone.1.1.fc2                                              │ … │  │
│ … │ net.backbone.1.1.fc2.0                                            │ … │  │
│ … │ net.backbone.1.1.fc2.1                                            │ … │  │
│ … │ net.backbone.1.1.conv                                             │ … │  │
│ … │ net.backbone.1.1.conv.conv                                        │ … │  │
│ … │ net.backbone.1.1.drop_path                                        │ … │  │
│ … │ net.backbone.2                                                    │ … │  │
│ … │ net.backbone.2.conv                                               │ … │  │
│ … │ net.backbone.2.conv.0                                             │ … │  │
│ … │ net.backbone.2.conv.1                                             │ … │  │
│ … │ net.backbone.3                                                    │ … │  │
│ … │ net.backbone.3.0                                                  │ … │  │
│ … │ net.backbone.3.0.fc1                                              │ … │  │
│ … │ net.backbone.3.0.fc1.0                                            │ … │  │
│ … │ net.backbone.3.0.fc1.1                                            │ … │  │
│ … │ net.backbone.3.0.graph_conv                                       │ … │  │
│ … │ net.backbone.3.0.graph_conv.gconv                                 │ … │  │
│ … │ net.backbone.3.0.graph_conv.gconv.nn                              │ … │  │
│ … │ net.backbone.3.0.graph_conv.gconv.nn.0                            │ … │  │
│ … │ net.backbone.3.0.graph_conv.gconv.nn.1                            │ … │  │
│ … │ net.backbone.3.0.graph_conv.gconv.nn.2                            │ … │  │
│ … │ net.backbone.3.0.graph_conv.gconv.get_centroids                   │ … │  │
│ … │ net.backbone.3.0.graph_conv.gconv.get_centroids.centers_proposal  │ … │  │
│ … │ net.backbone.3.0.graph_conv.dilated_knn_graph                     │ … │  │
│ … │ net.backbone.3.0.graph_conv.dilated_knn_graph._dilated            │ … │  │
│ … │ net.backbone.3.0.fc2                                              │ … │  │
│ … │ net.backbone.3.0.fc2.0                                            │ … │  │
│ … │ net.backbone.3.0.fc2.1                                            │ … │  │
│ … │ net.backbone.3.0.drop_path                                        │ … │  │
│ … │ net.backbone.3.1                                                  │ … │  │
│ … │ net.backbone.3.1.fc1                                              │ … │  │
│ … │ net.backbone.3.1.fc1.0                                            │ … │  │
│ … │ net.backbone.3.1.fc1.1                                            │ … │  │
│ … │ net.backbone.3.1.act                                              │ … │  │
│ … │ net.backbone.3.1.fc2                                              │ … │  │
│ … │ net.backbone.3.1.fc2.0                                            │ … │  │
│ … │ net.backbone.3.1.fc2.1                                            │ … │  │
│ … │ net.backbone.3.1.conv                                             │ … │  │
│ … │ net.backbone.3.1.conv.conv                                        │ … │  │
│ … │ net.backbone.3.1.drop_path                                        │ … │  │
│ … │ net.backbone.4                                                    │ … │  │
│ … │ net.backbone.4.0                                                  │ … │  │
│ … │ net.backbone.4.0.fc1                                              │ … │  │
│ … │ net.backbone.4.0.fc1.0                                            │ … │  │
│ … │ net.backbone.4.0.fc1.1                                            │ … │  │
│ … │ net.backbone.4.0.graph_conv                                       │ … │  │
│ … │ net.backbone.4.0.graph_conv.gconv                                 │ … │  │
│ … │ net.backbone.4.0.graph_conv.gconv.nn                              │ … │  │
│ … │ net.backbone.4.0.graph_conv.gconv.nn.0                            │ … │  │
│ … │ net.backbone.4.0.graph_conv.gconv.nn.1                            │ … │  │
│ … │ net.backbone.4.0.graph_conv.gconv.nn.2                            │ … │  │
│ … │ net.backbone.4.0.graph_conv.gconv.get_centroids                   │ … │  │
│ … │ net.backbone.4.0.graph_conv.gconv.get_centroids.centers_proposal  │ … │  │
│ … │ net.backbone.4.0.graph_conv.dilated_knn_graph                     │ … │  │
│ … │ net.backbone.4.0.graph_conv.dilated_knn_graph._dilated            │ … │  │
│ … │ net.backbone.4.0.fc2                                              │ … │  │
│ … │ net.backbone.4.0.fc2.0                                            │ … │  │
│ … │ net.backbone.4.0.fc2.1                                            │ … │  │
│ … │ net.backbone.4.0.drop_path                                        │ … │  │
│ … │ net.backbone.4.1                                                  │ … │  │
│ … │ net.backbone.4.1.fc1                                              │ … │  │
│ … │ net.backbone.4.1.fc1.0                                            │ … │  │
│ … │ net.backbone.4.1.fc1.1                                            │ … │  │
│ … │ net.backbone.4.1.act                                              │ … │  │
│ … │ net.backbone.4.1.fc2                                              │ … │  │
│ … │ net.backbone.4.1.fc2.0                                            │ … │  │
│ … │ net.backbone.4.1.fc2.1                                            │ … │  │
│ … │ net.backbone.4.1.conv                                             │ … │  │
│ … │ net.backbone.4.1.conv.conv                                        │ … │  │
│ … │ net.backbone.4.1.drop_path                                        │ … │  │
│ … │ net.backbone.5                                                    │ … │  │
│ … │ net.backbone.5.conv                                               │ … │  │
│ … │ net.backbone.5.conv.0                                             │ … │  │
│ … │ net.backbone.5.conv.1                                             │ … │  │
│ … │ net.backbone.6                                                    │ … │  │
│ … │ net.backbone.6.0                                                  │ … │  │
│ … │ net.backbone.6.0.fc1                                              │ … │  │
│ … │ net.backbone.6.0.fc1.0                                            │ … │  │
│ … │ net.backbone.6.0.fc1.1                                            │ … │  │
│ … │ net.backbone.6.0.graph_conv                                       │ … │  │
│ … │ net.backbone.6.0.graph_conv.gconv                                 │ … │  │
│ … │ net.backbone.6.0.graph_conv.gconv.nn                              │ … │  │
│ … │ net.backbone.6.0.graph_conv.gconv.nn.0                            │ … │  │
│ … │ net.backbone.6.0.graph_conv.gconv.nn.1                            │ … │  │
│ … │ net.backbone.6.0.graph_conv.gconv.nn.2                            │ … │  │
│ … │ net.backbone.6.0.graph_conv.gconv.get_centroids                   │ … │  │
│ … │ net.backbone.6.0.graph_conv.gconv.get_centroids.centers_proposal  │ … │  │
│ … │ net.backbone.6.0.graph_conv.dilated_knn_graph                     │ … │  │
│ … │ net.backbone.6.0.graph_conv.dilated_knn_graph._dilated            │ … │  │
│ … │ net.backbone.6.0.fc2                                              │ … │  │
│ … │ net.backbone.6.0.fc2.0                                            │ … │  │
│ … │ net.backbone.6.0.fc2.1                                            │ … │  │
│ … │ net.backbone.6.0.drop_path                                        │ … │  │
│ … │ net.backbone.6.1                                                  │ … │  │
│ … │ net.backbone.6.1.fc1                                              │ … │  │
│ … │ net.backbone.6.1.fc1.0                                            │ … │  │
│ … │ net.backbone.6.1.fc1.1                                            │ … │  │
│ … │ net.backbone.6.1.act                                              │ … │  │
│ … │ net.backbone.6.1.fc2                                              │ … │  │
│ … │ net.backbone.6.1.fc2.0                                            │ … │  │
│ … │ net.backbone.6.1.fc2.1                                            │ … │  │
│ … │ net.backbone.6.1.conv                                             │ … │  │
│ … │ net.backbone.6.1.conv.conv                                        │ … │  │
│ … │ net.backbone.6.1.drop_path                                        │ … │  │
│ … │ net.backbone.7                                                    │ … │  │
│ … │ net.backbone.7.0                                                  │ … │  │
│ … │ net.backbone.7.0.fc1                                              │ … │  │
│ … │ net.backbone.7.0.fc1.0                                            │ … │  │
│ … │ net.backbone.7.0.fc1.1                                            │ … │  │
│ … │ net.backbone.7.0.graph_conv                                       │ … │  │
│ … │ net.backbone.7.0.graph_conv.gconv                                 │ … │  │
│ … │ net.backbone.7.0.graph_conv.gconv.nn                              │ … │  │
│ … │ net.backbone.7.0.graph_conv.gconv.nn.0                            │ … │  │
│ … │ net.backbone.7.0.graph_conv.gconv.nn.1                            │ … │  │
│ … │ net.backbone.7.0.graph_conv.gconv.nn.2                            │ … │  │
│ … │ net.backbone.7.0.graph_conv.gconv.get_centroids                   │ … │  │
│ … │ net.backbone.7.0.graph_conv.gconv.get_centroids.centers_proposal  │ … │  │
│ … │ net.backbone.7.0.graph_conv.dilated_knn_graph                     │ … │  │
│ … │ net.backbone.7.0.graph_conv.dilated_knn_graph._dilated            │ … │  │
│ … │ net.backbone.7.0.fc2                                              │ … │  │
│ … │ net.backbone.7.0.fc2.0                                            │ … │  │
│ … │ net.backbone.7.0.fc2.1                                            │ … │  │
│ … │ net.backbone.7.0.drop_path                                        │ … │  │
│ … │ net.backbone.7.1                                                  │ … │  │
│ … │ net.backbone.7.1.fc1                                              │ … │  │
│ … │ net.backbone.7.1.fc1.0                                            │ … │  │
│ … │ net.backbone.7.1.fc1.1                                            │ … │  │
│ … │ net.backbone.7.1.act                                              │ … │  │
│ … │ net.backbone.7.1.fc2                                              │ … │  │
│ … │ net.backbone.7.1.fc2.0                                            │ … │  │
│ … │ net.backbone.7.1.fc2.1                                            │ … │  │
│ … │ net.backbone.7.1.conv                                             │ … │  │
│ … │ net.backbone.7.1.conv.conv                                        │ … │  │
│ … │ net.backbone.7.1.drop_path                                        │ … │  │
│ … │ net.backbone.8                                                    │ … │  │
│ … │ net.backbone.8.0                                                  │ … │  │
│ … │ net.backbone.8.0.fc1                                              │ … │  │
│ … │ net.backbone.8.0.fc1.0                                            │ … │  │
│ … │ net.backbone.8.0.fc1.1                                            │ … │  │
│ … │ net.backbone.8.0.graph_conv                                       │ … │  │
│ … │ net.backbone.8.0.graph_conv.gconv                                 │ … │  │
│ … │ net.backbone.8.0.graph_conv.gconv.nn                              │ … │  │
│ … │ net.backbone.8.0.graph_conv.gconv.nn.0                            │ … │  │
│ … │ net.backbone.8.0.graph_conv.gconv.nn.1                            │ … │  │
│ … │ net.backbone.8.0.graph_conv.gconv.nn.2                            │ … │  │
│ … │ net.backbone.8.0.graph_conv.gconv.get_centroids                   │ … │  │
│ … │ net.backbone.8.0.graph_conv.gconv.get_centroids.centers_proposal  │ … │  │
│ … │ net.backbone.8.0.graph_conv.dilated_knn_graph                     │ … │  │
│ … │ net.backbone.8.0.graph_conv.dilated_knn_graph._dilated            │ … │  │
│ … │ net.backbone.8.0.fc2                                              │ … │  │
│ … │ net.backbone.8.0.fc2.0                                            │ … │  │
│ … │ net.backbone.8.0.fc2.1                                            │ … │  │
│ … │ net.backbone.8.0.drop_path                                        │ … │  │
│ … │ net.backbone.8.1                                                  │ … │  │
│ … │ net.backbone.8.1.fc1                                              │ … │  │
│ … │ net.backbone.8.1.fc1.0                                            │ … │  │
│ … │ net.backbone.8.1.fc1.1                                            │ … │  │
│ … │ net.backbone.8.1.act                                              │ … │  │
│ … │ net.backbone.8.1.fc2                                              │ … │  │
│ … │ net.backbone.8.1.fc2.0                                            │ … │  │
│ … │ net.backbone.8.1.fc2.1                                            │ … │  │
│ … │ net.backbone.8.1.conv                                             │ … │  │
│ … │ net.backbone.8.1.conv.conv                                        │ … │  │
│ … │ net.backbone.8.1.drop_path                                        │ … │  │
│ … │ net.backbone.9                                                    │ … │  │
│ … │ net.backbone.9.0                                                  │ … │  │
│ … │ net.backbone.9.0.fc1                                              │ … │  │
│ … │ net.backbone.9.0.fc1.0                                            │ … │  │
│ … │ net.backbone.9.0.fc1.1                                            │ … │  │
│ … │ net.backbone.9.0.graph_conv                                       │ … │  │
│ … │ net.backbone.9.0.graph_conv.gconv                                 │ … │  │
│ … │ net.backbone.9.0.graph_conv.gconv.nn                              │ … │  │
│ … │ net.backbone.9.0.graph_conv.gconv.nn.0                            │ … │  │
│ … │ net.backbone.9.0.graph_conv.gconv.nn.1                            │ … │  │
│ … │ net.backbone.9.0.graph_conv.gconv.nn.2                            │ … │  │
│ … │ net.backbone.9.0.graph_conv.gconv.get_centroids                   │ … │  │
│ … │ net.backbone.9.0.graph_conv.gconv.get_centroids.centers_proposal  │ … │  │
│ … │ net.backbone.9.0.graph_conv.dilated_knn_graph                     │ … │  │
│ … │ net.backbone.9.0.graph_conv.dilated_knn_graph._dilated            │ … │  │
│ … │ net.backbone.9.0.fc2                                              │ … │  │
│ … │ net.backbone.9.0.fc2.0                                            │ … │  │
│ … │ net.backbone.9.0.fc2.1                                            │ … │  │
│ … │ net.backbone.9.0.drop_path                                        │ … │  │
│ … │ net.backbone.9.1                                                  │ … │  │
│ … │ net.backbone.9.1.fc1                                              │ … │  │
│ … │ net.backbone.9.1.fc1.0                                            │ … │  │
│ … │ net.backbone.9.1.fc1.1                                            │ … │  │
│ … │ net.backbone.9.1.act                                              │ … │  │
│ … │ net.backbone.9.1.fc2                                              │ … │  │
│ … │ net.backbone.9.1.fc2.0                                            │ … │  │
│ … │ net.backbone.9.1.fc2.1                                            │ … │  │
│ … │ net.backbone.9.1.conv                                             │ … │  │
│ … │ net.backbone.9.1.conv.conv                                        │ … │  │
│ … │ net.backbone.9.1.drop_path                                        │ … │  │
│ … │ net.backbone.10                                                   │ … │  │
│ … │ net.backbone.10.0                                                 │ … │  │
│ … │ net.backbone.10.0.fc1                                             │ … │  │
│ … │ net.backbone.10.0.fc1.0                                           │ … │  │
│ … │ net.backbone.10.0.fc1.1                                           │ … │  │
│ … │ net.backbone.10.0.graph_conv                                      │ … │  │
│ … │ net.backbone.10.0.graph_conv.gconv                                │ … │  │
│ … │ net.backbone.10.0.graph_conv.gconv.nn                             │ … │  │
│ … │ net.backbone.10.0.graph_conv.gconv.nn.0                           │ … │  │
│ … │ net.backbone.10.0.graph_conv.gconv.nn.1                           │ … │  │
│ … │ net.backbone.10.0.graph_conv.gconv.nn.2                           │ … │  │
│ … │ net.backbone.10.0.graph_conv.gconv.get_centroids                  │ … │  │
│ … │ net.backbone.10.0.graph_conv.gconv.get_centroids.centers_proposal │ … │  │
│ … │ net.backbone.10.0.graph_conv.dilated_knn_graph                    │ … │  │
│ … │ net.backbone.10.0.graph_conv.dilated_knn_graph._dilated           │ … │  │
│ … │ net.backbone.10.0.fc2                                             │ … │  │
│ … │ net.backbone.10.0.fc2.0                                           │ … │  │
│ … │ net.backbone.10.0.fc2.1                                           │ … │  │
│ … │ net.backbone.10.0.drop_path                                       │ … │  │
│ … │ net.backbone.10.1                                                 │ … │  │
│ … │ net.backbone.10.1.fc1                                             │ … │  │
│ … │ net.backbone.10.1.fc1.0                                           │ … │  │
│ … │ net.backbone.10.1.fc1.1                                           │ … │  │
│ … │ net.backbone.10.1.act                                             │ … │  │
│ … │ net.backbone.10.1.fc2                                             │ … │  │
│ … │ net.backbone.10.1.fc2.0                                           │ … │  │
│ … │ net.backbone.10.1.fc2.1                                           │ … │  │
│ … │ net.backbone.10.1.conv                                            │ … │  │
│ … │ net.backbone.10.1.conv.conv                                       │ … │  │
│ … │ net.backbone.10.1.drop_path                                       │ … │  │
│ … │ net.backbone.11                                                   │ … │  │
│ … │ net.backbone.11.0                                                 │ … │  │
│ … │ net.backbone.11.0.fc1                                             │ … │  │
│ … │ net.backbone.11.0.fc1.0                                           │ … │  │
│ … │ net.backbone.11.0.fc1.1                                           │ … │  │
│ … │ net.backbone.11.0.graph_conv                                      │ … │  │
│ … │ net.backbone.11.0.graph_conv.gconv                                │ … │  │
│ … │ net.backbone.11.0.graph_conv.gconv.nn                             │ … │  │
│ … │ net.backbone.11.0.graph_conv.gconv.nn.0                           │ … │  │
│ … │ net.backbone.11.0.graph_conv.gconv.nn.1                           │ … │  │
│ … │ net.backbone.11.0.graph_conv.gconv.nn.2                           │ … │  │
│ … │ net.backbone.11.0.graph_conv.gconv.get_centroids                  │ … │  │
│ … │ net.backbone.11.0.graph_conv.gconv.get_centroids.centers_proposal │ … │  │
│ … │ net.backbone.11.0.graph_conv.dilated_knn_graph                    │ … │  │
│ … │ net.backbone.11.0.graph_conv.dilated_knn_graph._dilated           │ … │  │
│ … │ net.backbone.11.0.fc2                                             │ … │  │
│ … │ net.backbone.11.0.fc2.0                                           │ … │  │
│ … │ net.backbone.11.0.fc2.1                                           │ … │  │
│ … │ net.backbone.11.0.drop_path                                       │ … │  │
│ … │ net.backbone.11.1                                                 │ … │  │
│ … │ net.backbone.11.1.fc1                                             │ … │  │
│ … │ net.backbone.11.1.fc1.0                                           │ … │  │
│ … │ net.backbone.11.1.fc1.1                                           │ … │  │
│ … │ net.backbone.11.1.act                                             │ … │  │
│ … │ net.backbone.11.1.fc2                                             │ … │  │
│ … │ net.backbone.11.1.fc2.0                                           │ … │  │
│ … │ net.backbone.11.1.fc2.1                                           │ … │  │
│ … │ net.backbone.11.1.conv                                            │ … │  │
│ … │ net.backbone.11.1.conv.conv                                       │ … │  │
│ … │ net.backbone.11.1.drop_path                                       │ … │  │
│ … │ net.backbone.12                                                   │ … │  │
│ … │ net.backbone.12.conv                                              │ … │  │
│ … │ net.backbone.12.conv.0                                            │ … │  │
│ … │ net.backbone.12.conv.1                                            │ … │  │
│ … │ net.backbone.13                                                   │ … │  │
│ … │ net.backbone.13.0                                                 │ … │  │
│ … │ net.backbone.13.0.fc1                                             │ … │  │
│ … │ net.backbone.13.0.fc1.0                                           │ … │  │
│ … │ net.backbone.13.0.fc1.1                                           │ … │  │
│ … │ net.backbone.13.0.graph_conv                                      │ … │  │
│ … │ net.backbone.13.0.graph_conv.gconv                                │ … │  │
│ … │ net.backbone.13.0.graph_conv.gconv.nn                             │ … │  │
│ … │ net.backbone.13.0.graph_conv.gconv.nn.0                           │ … │  │
│ … │ net.backbone.13.0.graph_conv.gconv.nn.1                           │ … │  │
│ … │ net.backbone.13.0.graph_conv.gconv.nn.2                           │ … │  │
│ … │ net.backbone.13.0.graph_conv.gconv.get_centroids                  │ … │  │
│ … │ net.backbone.13.0.graph_conv.gconv.get_centroids.centers_proposal │ … │  │
│ … │ net.backbone.13.0.graph_conv.dilated_knn_graph                    │ … │  │
│ … │ net.backbone.13.0.graph_conv.dilated_knn_graph._dilated           │ … │  │
│ … │ net.backbone.13.0.fc2                                             │ … │  │
│ … │ net.backbone.13.0.fc2.0                                           │ … │  │
│ … │ net.backbone.13.0.fc2.1                                           │ … │  │
│ … │ net.backbone.13.0.drop_path                                       │ … │  │
│ … │ net.backbone.13.1                                                 │ … │  │
│ … │ net.backbone.13.1.fc1                                             │ … │  │
│ … │ net.backbone.13.1.fc1.0                                           │ … │  │
│ … │ net.backbone.13.1.fc1.1                                           │ … │  │
│ … │ net.backbone.13.1.act                                             │ … │  │
│ … │ net.backbone.13.1.fc2                                             │ … │  │
│ … │ net.backbone.13.1.fc2.0                                           │ … │  │
│ … │ net.backbone.13.1.fc2.1                                           │ … │  │
│ … │ net.backbone.13.1.conv                                            │ … │  │
│ … │ net.backbone.13.1.conv.conv                                       │ … │  │
│ … │ net.backbone.13.1.drop_path                                       │ … │  │
│ … │ net.backbone.14                                                   │ … │  │
│ … │ net.backbone.14.0                                                 │ … │  │
│ … │ net.backbone.14.0.fc1                                             │ … │  │
│ … │ net.backbone.14.0.fc1.0                                           │ … │  │
│ … │ net.backbone.14.0.fc1.1                                           │ … │  │
│ … │ net.backbone.14.0.graph_conv                                      │ … │  │
│ … │ net.backbone.14.0.graph_conv.gconv                                │ … │  │
│ … │ net.backbone.14.0.graph_conv.gconv.nn                             │ … │  │
│ … │ net.backbone.14.0.graph_conv.gconv.nn.0                           │ … │  │
│ … │ net.backbone.14.0.graph_conv.gconv.nn.1                           │ … │  │
│ … │ net.backbone.14.0.graph_conv.gconv.nn.2                           │ … │  │
│ … │ net.backbone.14.0.graph_conv.gconv.get_centroids                  │ … │  │
│ … │ net.backbone.14.0.graph_conv.gconv.get_centroids.centers_proposal │ … │  │
│ … │ net.backbone.14.0.graph_conv.dilated_knn_graph                    │ … │  │
│ … │ net.backbone.14.0.graph_conv.dilated_knn_graph._dilated           │ … │  │
│ … │ net.backbone.14.0.fc2                                             │ … │  │
│ … │ net.backbone.14.0.fc2.0                                           │ … │  │
│ … │ net.backbone.14.0.fc2.1                                           │ … │  │
│ … │ net.backbone.14.0.drop_path                                       │ … │  │
│ … │ net.backbone.14.1                                                 │ … │  │
│ … │ net.backbone.14.1.fc1                                             │ … │  │
│ … │ net.backbone.14.1.fc1.0                                           │ … │  │
│ … │ net.backbone.14.1.fc1.1                                           │ … │  │
│ … │ net.backbone.14.1.act                                             │ … │  │
│ … │ net.backbone.14.1.fc2                                             │ … │  │
│ … │ net.backbone.14.1.fc2.0                                           │ … │  │
│ … │ net.backbone.14.1.fc2.1                                           │ … │  │
│ … │ net.backbone.14.1.conv                                            │ … │  │
│ … │ net.backbone.14.1.conv.conv                                       │ … │  │
│ … │ net.backbone.14.1.drop_path                                       │ … │  │
│ … │ net.prediction                                                    │ … │  │
│ … │ net.prediction.0                                                  │ … │  │
│ … │ net.prediction.1                                                  │ … │  │
│ … │ net.prediction.2                                                  │ … │  │
│ … │ net.prediction.3                                                  │ … │  │
│ … │ net.prediction.4                                                  │ … │  │
│ … │ criterion                                                         │ … │  │
│ … │ train_loss                                                        │ … │  │
│ … │ val_loss                                                          │ … │  │
│ … │ test_loss                                                         │ … │  │
│ … │ val_mAP                                                           │ … │  │
│ … │ test_mAP                                                          │ … │  │
│ … │ val_mAP_best                                                      │ … │  │
└───┴───────────────────────────────────────────────────────────────────┴───┴──┘
Trainable params: 32.0 M                                                        
Non-trainable params: 12.1 M                                                    
Total params: 44.1 M                                                            
Total estimated model params size (MB): 176                                     
In main
norm is batch
bias is True
drop_path is 0.1
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
hyperparameters: "compile":            False
"learning_rate":      0.0005
"loss":               bce
"lr_rate":            [0.05, 0.02, 0.01, 0.005, 0.002, 0.001, 0.0005, 0.0002]
"lr_scheduler_epoch": [10, 15, 20, 25, 30, 35, 50, 45]
"net":                HGCN(
  (proj): Conv2d(512, 80, kernel_size=(1, 1), stride=(1, 1))
  (stem): Stem_conv(
    (convs): Sequential(
      (0): Conv2d(1, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (1): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): GELU(approximate='none')
      (3): Conv2d(40, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (4): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): GELU(approximate='none')
      (6): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (query_embed): Embedding(200, 640)
  (label_proj): Conv2d(640, 1024, kernel_size=(1, 1), stride=(1, 1))
  (backbone): Sequential(
    (0): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(80, 80, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(240, 240, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(240, 80, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): Identity()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(80, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
        )
        (drop_path): Identity()
      )
    )
    (1): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(80, 80, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(240, 240, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(240, 80, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(80, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
        )
        (drop_path): DropPath()
      )
    )
    (2): DownSample(
      (conv): Sequential(
        (0): Conv2d(80, 160, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (3): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(160, 160, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(480, 480, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(480, 160, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(160, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=640)
        )
        (drop_path): DropPath()
      )
    )
    (4): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(160, 160, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(480, 480, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(480, 160, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(160, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=640)
        )
        (drop_path): DropPath()
      )
    )
    (5): DownSample(
      (conv): Sequential(
        (0): Conv2d(160, 400, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (6): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(400, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(1200, 1200, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(1200, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(400, 1600, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(1600, 400, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(1600, 1600, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1600)
        )
        (drop_path): DropPath()
      )
    )
    (7): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(400, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(1200, 1200, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(1200, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(400, 1600, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(1600, 400, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(1600, 1600, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1600)
        )
        (drop_path): DropPath()
      )
    )
    (8): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(400, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(1200, 1200, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(1200, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(400, 1600, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(1600, 400, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(1600, 1600, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1600)
        )
        (drop_path): DropPath()
      )
    )
    (9): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(400, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(1200, 1200, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(1200, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(400, 1600, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(1600, 400, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(1600, 1600, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1600)
        )
        (drop_path): DropPath()
      )
    )
    (10): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(400, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(1200, 1200, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(1200, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(400, 1600, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(1600, 400, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(1600, 1600, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1600)
        )
        (drop_path): DropPath()
      )
    )
    (11): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(400, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(1200, 1200, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(1200, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(400, 1600, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(1600, 400, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(1600, 1600, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1600)
        )
        (drop_path): DropPath()
      )
    )
    (12): DownSample(
      (conv): Sequential(
        (0): Conv2d(400, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (13): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(640, 640, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(1920, 1920, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(1920, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(1920, 640, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(640, 2560, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(2560, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(2560, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(2560, 2560, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2560)
        )
        (drop_path): DropPath()
      )
    )
    (14): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(640, 640, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(1920, 1920, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(1920, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(1920, 640, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(640, 2560, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(2560, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(2560, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(2560, 2560, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2560)
        )
        (drop_path): DropPath()
      )
    )
  )
  (prediction): Sequential(
    (0): Conv2d(640, 1024, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): GELU(approximate='none')
    (3): Dropout(p=0.0, inplace=False)
    (4): Conv2d(1024, 200, kernel_size=(1, 1), stride=(1, 1))
  )
)
"opt_warmup":         True
"optimizer":          functools.partial(<class 'torch.optim.adam.Adam'>, lr=0.0005, weight_decay=5e-07, eps=1e-08, betas=[0.95, 0.999])
"scheduler":          functools.partial(<class 'torch.optim.lr_scheduler.MultiStepLR'>, milestones=[10, 15, 20, 25, 30, 35, 40], gamma=0.5)
Epoch 0/49                   1/2453 0:00:10 • -:--:-- 0.00it/s v_num: jm5h      
                                                               train/loss_step: 
                                                               0.778            
hyperparameters: "compile":            False
"learning_rate":      0.0005
"loss":               bce
"lr_rate":            [0.05, 0.02, 0.01, 0.005, 0.002, 0.001, 0.0005, 0.0002]
"lr_scheduler_epoch": [10, 15, 20, 25, 30, 35, 50, 45]
"net":                HGCN(
  (proj): Conv2d(512, 80, kernel_size=(1, 1), stride=(1, 1))
  (stem): Stem_conv(
    (convs): Sequential(
      (0): Conv2d(1, 40, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (1): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): GELU(approximate='none')
      (3): Conv2d(40, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (4): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): GELU(approximate='none')
      (6): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (query_embed): Embedding(200, 640)
  (label_proj): Conv2d(640, 1024, kernel_size=(1, 1), stride=(1, 1))
  (backbone): Sequential(
    (0): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(80, 80, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(240, 240, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(240, 80, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): Identity()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(80, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
        )
        (drop_path): Identity()
      )
    )
    (1): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(80, 80, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(240, 240, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(240, 80, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(80, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(320, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=320)
        )
        (drop_path): DropPath()
      )
    )
    (2): DownSample(
      (conv): Sequential(
        (0): Conv2d(80, 160, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (3): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(160, 160, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(480, 480, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(480, 160, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(160, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=640)
        )
        (drop_path): DropPath()
      )
    )
    (4): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(160, 160, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(480, 480, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(480, 160, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(160, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(640, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=640)
        )
        (drop_path): DropPath()
      )
    )
    (5): DownSample(
      (conv): Sequential(
        (0): Conv2d(160, 400, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (6): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(400, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(1200, 1200, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(1200, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(400, 1600, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(1600, 400, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(1600, 1600, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1600)
        )
        (drop_path): DropPath()
      )
    )
    (7): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(400, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(1200, 1200, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(1200, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(400, 1600, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(1600, 400, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(1600, 1600, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1600)
        )
        (drop_path): DropPath()
      )
    )
    (8): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(400, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(1200, 1200, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(1200, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(400, 1600, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(1600, 400, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(1600, 1600, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1600)
        )
        (drop_path): DropPath()
      )
    )
    (9): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(400, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(1200, 1200, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(1200, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(400, 1600, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(1600, 400, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(1600, 1600, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1600)
        )
        (drop_path): DropPath()
      )
    )
    (10): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(400, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(1200, 1200, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(1200, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(400, 1600, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(1600, 400, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(1600, 1600, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1600)
        )
        (drop_path): DropPath()
      )
    )
    (11): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(400, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(1200, 1200, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(1200, 400, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(400, 1600, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(1600, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(1600, 400, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(400, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(1600, 1600, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1600)
        )
        (drop_path): DropPath()
      )
    )
    (12): DownSample(
      (conv): Sequential(
        (0): Conv2d(400, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (13): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(640, 640, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(1920, 1920, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(1920, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(1920, 640, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(640, 2560, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(2560, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(2560, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(2560, 2560, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2560)
        )
        (drop_path): DropPath()
      )
    )
    (14): Sequential(
      (0): Grapher(
        (fc1): Sequential(
          (0): Conv2d(640, 640, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (graph_conv): DyGraphConv2d(
          (gconv): MRConv2d(
            (nn): BasicConv(
              (0): Conv2d(1920, 1920, kernel_size=(1, 1), stride=(1, 1), groups=4)
              (1): BatchNorm2d(1920, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): GELU(approximate='none')
            )
            (get_centroids): HyperedgeConstruction(
              (centers_proposal): AdaptiveAvgPool2d(output_size=(5, 10))
            )
          )
          (dilated_knn_graph): DenseDilatedKnnGraph(
            (_dilated): DenseDilated()
          )
        )
        (fc2): Sequential(
          (0): Conv2d(1920, 640, kernel_size=(1, 1), stride=(1, 1))
          (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop_path): DropPath()
      )
      (1): ConvFFN(
        (fc1): Sequential(
          (0): Conv2d(640, 2560, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(2560, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (act): GELU(approximate='none')
        (fc2): Sequential(
          (0): Conv2d(2560, 640, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv): ResDWC(
          (conv): Conv2d(2560, 2560, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=2560)
        )
        (drop_path): DropPath()
      )
    )
  )
  (prediction): Sequential(
    (0): Conv2d(640, 1024, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): GELU(approximate='none')
    (3): Dropout(p=0.0, inplace=False)
    (4): Conv2d(1024, 200, kernel_size=(1, 1), stride=(1, 1))
  )
)
"opt_warmup":         True
"optimizer":          functools.partial(<class 'torch.optim.adam.Adam'>, lr=0.0005, weight_decay=5e-07, eps=1e-08, betas=[0.95, 0.999])
"scheduler":          functools.partial(<class 'torch.optim.lr_scheduler.MultiStepLR'>, milestones=[10, 15, 20, 25, 30, 35, 40], gamma=0.5)
Error executing job with overrides: ['trainer.max_epochs=50', 'trainer.devices=2']
Traceback (most recent call last):
  File "/data/home/acw572/hgann/HGANN/src/train.py", line 197, in <module>
    main()
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/hydra/main.py", line 94, in decorated_main
    _run_hydra(
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/hydra/_internal/utils.py", line 394, in _run_hydra
    _run_app(
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/hydra/_internal/utils.py", line 457, in _run_app
    run_and_report(
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/hydra/_internal/utils.py", line 223, in run_and_report
    raise ex
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/hydra/_internal/utils.py", line 220, in run_and_report
    return func()
           ^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/hydra/_internal/utils.py", line 458, in <lambda>
    lambda: hydra.run(
            ^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/hydra/_internal/hydra.py", line 132, in run
    _ = ret.return_value
        ^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/hydra/core/utils.py", line 260, in return_value
    raise self._return_value
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
                       ^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/hgann/HGANN/src/train.py", line 181, in main
    metrics,_ = train(cfg)
                ^^^^^^^^^^
  File "/data/home/acw572/hgann/HGANN/src/utils/utils.py", line 111, in wrap
    raise ex
  File "/data/home/acw572/hgann/HGANN/src/utils/utils.py", line 101, in wrap
    metric_dict, object_dict = task_func(cfg=cfg)
                               ^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/hgann/HGANN/src/train.py", line 115, in train
    trainer.fit(model=model, datamodule=datamodule)
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/trainer/trainer.py", line 544, in fit
    call._call_and_handle_interrupt(
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/trainer/call.py", line 43, in _call_and_handle_interrupt
    return trainer.strategy.launcher.launch(trainer_fn, *args, trainer=trainer, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/strategies/launchers/subprocess_script.py", line 102, in launch
    return function(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/trainer/trainer.py", line 580, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/trainer/trainer.py", line 989, in _run
    results = self._run_stage()
              ^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/trainer/trainer.py", line 1035, in _run_stage
    self.fit_loop.run()
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/fit_loop.py", line 202, in run
    self.advance()
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/fit_loop.py", line 359, in advance
    self.epoch_loop.run(self._data_fetcher)
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 136, in run
    self.advance(data_fetcher)
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 240, in advance
    batch_output = self.automatic_optimization.run(trainer.optimizers[0], batch_idx, kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/optimization/automatic.py", line 187, in run
    self._optimizer_step(batch_idx, closure)
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/optimization/automatic.py", line 265, in _optimizer_step
    call._call_lightning_module_hook(
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/trainer/call.py", line 157, in _call_lightning_module_hook
    output = fn(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/hgann/HGANN/src/models/tagging_module_test.py", line 252, in optimizer_step
    optimizer.step(closure=optimizer_closure)
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/core/optimizer.py", line 151, in step
    step_output = self._strategy.optimizer_step(self._optimizer, closure, **kwargs)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/strategies/ddp.py", line 265, in optimizer_step
    optimizer_output = super().optimizer_step(optimizer, closure, model, **kwargs)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/strategies/strategy.py", line 230, in optimizer_step
    return self.precision_plugin.optimizer_step(optimizer, model=model, closure=closure, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/plugins/precision/precision.py", line 117, in optimizer_step
    return optimizer.step(closure=closure, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/optim/lr_scheduler.py", line 75, in wrapper
    return wrapped(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/optim/optimizer.py", line 385, in wrapper
    out = func(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/optim/optimizer.py", line 76, in _use_grad
    ret = func(self, *args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/optim/adam.py", line 146, in step
    loss = closure()
           ^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/plugins/precision/precision.py", line 104, in _wrap_closure
    closure_result = closure()
                     ^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/optimization/automatic.py", line 140, in __call__
    self._result = self.closure(*args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/optimization/automatic.py", line 126, in closure
    step_output = self._step_fn()
                  ^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/optimization/automatic.py", line 315, in _training_step
    training_step_output = call._call_strategy_hook(trainer, "training_step", *kwargs.values())
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/trainer/call.py", line 309, in _call_strategy_hook
    output = fn(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/strategies/strategy.py", line 381, in training_step
    return self._forward_redirection(self.model, self.lightning_module, "training_step", *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/strategies/strategy.py", line 633, in __call__
    wrapper_output = wrapper_module(*args, **kwargs)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/nn/parallel/distributed.py", line 1519, in forward
    inputs, kwargs = self._pre_forward(*inputs, **kwargs)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/nn/parallel/distributed.py", line 1413, in _pre_forward
    if torch.is_grad_enabled() and self.reducer._rebuild_buckets():
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: It looks like your LightningModule has parameters that were not used in producing the loss returned by training_step. If this is intentional, you must enable the detection of unused parameters in DDP, either by setting the string value `strategy='ddp_find_unused_parameters_true'` or by setting the flag in the strategy with `strategy=DDPStrategy(find_unused_parameters=True)`.
[[36m2024-08-13 22:43:44,574[0m][[34mutils.utils[0m][[31mERROR[0m] - [rank: 0] [0m
Traceback (most recent call last):
  File "/data/home/acw572/hgann/HGANN/src/utils/utils.py", line 101, in wrap
    metric_dict, object_dict = task_func(cfg=cfg)
                               ^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/hgann/HGANN/src/train.py", line 115, in train
    trainer.fit(model=model, datamodule=datamodule)
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/trainer/trainer.py", line 544, in fit
    call._call_and_handle_interrupt(
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/trainer/call.py", line 43, in _call_and_handle_interrupt
    return trainer.strategy.launcher.launch(trainer_fn, *args, trainer=trainer, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/strategies/launchers/subprocess_script.py", line 102, in launch
    return function(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/trainer/trainer.py", line 580, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/trainer/trainer.py", line 989, in _run
    results = self._run_stage()
              ^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/trainer/trainer.py", line 1035, in _run_stage
    self.fit_loop.run()
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/fit_loop.py", line 202, in run
    self.advance()
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/fit_loop.py", line 359, in advance
    self.epoch_loop.run(self._data_fetcher)
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 136, in run
    self.advance(data_fetcher)
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 240, in advance
    batch_output = self.automatic_optimization.run(trainer.optimizers[0], batch_idx, kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/optimization/automatic.py", line 187, in run
    self._optimizer_step(batch_idx, closure)
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/optimization/automatic.py", line 265, in _optimizer_step
    call._call_lightning_module_hook(
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/trainer/call.py", line 157, in _call_lightning_module_hook
    output = fn(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/hgann/HGANN/src/models/tagging_module_test.py", line 252, in optimizer_step
    optimizer.step(closure=optimizer_closure)
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/core/optimizer.py", line 151, in step
    step_output = self._strategy.optimizer_step(self._optimizer, closure, **kwargs)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/strategies/ddp.py", line 265, in optimizer_step
    optimizer_output = super().optimizer_step(optimizer, closure, model, **kwargs)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/strategies/strategy.py", line 230, in optimizer_step
    return self.precision_plugin.optimizer_step(optimizer, model=model, closure=closure, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/plugins/precision/precision.py", line 117, in optimizer_step
    return optimizer.step(closure=closure, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/optim/lr_scheduler.py", line 75, in wrapper
    return wrapped(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/optim/optimizer.py", line 385, in wrapper
    out = func(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/optim/optimizer.py", line 76, in _use_grad
    ret = func(self, *args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/optim/adam.py", line 146, in step
    loss = closure()
           ^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/plugins/precision/precision.py", line 104, in _wrap_closure
    closure_result = closure()
                     ^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/optimization/automatic.py", line 140, in __call__
    self._result = self.closure(*args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/optimization/automatic.py", line 126, in closure
    step_output = self._step_fn()
                  ^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/optimization/automatic.py", line 315, in _training_step
    training_step_output = call._call_strategy_hook(trainer, "training_step", *kwargs.values())
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/trainer/call.py", line 309, in _call_strategy_hook
    output = fn(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/strategies/strategy.py", line 381, in training_step
    return self._forward_redirection(self.model, self.lightning_module, "training_step", *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/strategies/strategy.py", line 633, in __call__
    wrapper_output = wrapper_module(*args, **kwargs)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/nn/parallel/distributed.py", line 1519, in forward
    inputs, kwargs = self._pre_forward(*inputs, **kwargs)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/nn/parallel/distributed.py", line 1413, in _pre_forward
    if torch.is_grad_enabled() and self.reducer._rebuild_buckets():
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: It looks like your LightningModule has parameters that were not used in producing the loss returned by training_step. If this is intentional, you must enable the detection of unused parameters in DDP, either by setting the string value `strategy='ddp_find_unused_parameters_true'` or by setting the flag in the strategy with `strategy=DDPStrategy(find_unused_parameters=True)`.
[[36m2024-08-13 22:43:44,915[0m][[34mutils.utils[0m][[32mINFO[0m] - [rank: 0] Output dir: /data/scratch/acw572/LHGNN/logs/train/runs/2024-08-13_22-42-13[0m
[[36m2024-08-13 22:43:44,916[0m][[34mutils.utils[0m][[32mINFO[0m] - [rank: 0] Closing wandb![0m
wandb: - 0.006 MB of 0.006 MB uploadedwandb: \ 0.006 MB of 0.006 MB uploadedwandb: | 0.006 MB of 0.019 MB uploadedwandb: / 0.006 MB of 0.019 MB uploadedwandb: - 0.088 MB of 0.088 MB uploadedwandb:                                                                                
wandb: 🚀 View run light-silence-26 at: https://wandb.ai/shubhr/audioset-bal/runs/tvs7jm5h
wandb: ️⚡ View job at https://wandb.ai/shubhr/audioset-bal/jobs/QXJ0aWZhY3RDb2xsZWN0aW9uOjI0NzQ3OTYxNA==/version_details/v3
wandb: Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: /data/scratch/acw572/LHGNN/logs/train/runs/2024-08-13_22-42-13/wandb/run-20240813_224246-tvs7jm5h/logs
Error executing job with overrides: ['trainer.max_epochs=50', 'trainer.devices=2']
Traceback (most recent call last):
  File "/data/home/acw572/hgann/HGANN/src/train.py", line 197, in <module>
    main()
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/hydra/main.py", line 94, in decorated_main
    _run_hydra(
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/hydra/_internal/utils.py", line 394, in _run_hydra
    _run_app(
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/hydra/_internal/utils.py", line 457, in _run_app
    run_and_report(
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/hydra/_internal/utils.py", line 223, in run_and_report
    raise ex
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/hydra/_internal/utils.py", line 220, in run_and_report
    return func()
           ^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/hydra/_internal/utils.py", line 458, in <lambda>
    lambda: hydra.run(
            ^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/hydra/_internal/hydra.py", line 132, in run
    _ = ret.return_value
        ^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/hydra/core/utils.py", line 260, in return_value
    raise self._return_value
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
                       ^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/hgann/HGANN/src/train.py", line 181, in main
    metrics,_ = train(cfg)
                ^^^^^^^^^^
  File "/data/home/acw572/hgann/HGANN/src/utils/utils.py", line 111, in wrap
    raise ex
  File "/data/home/acw572/hgann/HGANN/src/utils/utils.py", line 101, in wrap
    metric_dict, object_dict = task_func(cfg=cfg)
                               ^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/hgann/HGANN/src/train.py", line 115, in train
    trainer.fit(model=model, datamodule=datamodule)
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/trainer/trainer.py", line 544, in fit
    call._call_and_handle_interrupt(
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/trainer/call.py", line 43, in _call_and_handle_interrupt
    return trainer.strategy.launcher.launch(trainer_fn, *args, trainer=trainer, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/strategies/launchers/subprocess_script.py", line 102, in launch
    return function(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/trainer/trainer.py", line 580, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/trainer/trainer.py", line 989, in _run
    results = self._run_stage()
              ^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/trainer/trainer.py", line 1035, in _run_stage
    self.fit_loop.run()
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/fit_loop.py", line 202, in run
    self.advance()
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/fit_loop.py", line 359, in advance
    self.epoch_loop.run(self._data_fetcher)
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 136, in run
    self.advance(data_fetcher)
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/training_epoch_loop.py", line 240, in advance
    batch_output = self.automatic_optimization.run(trainer.optimizers[0], batch_idx, kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/optimization/automatic.py", line 187, in run
    self._optimizer_step(batch_idx, closure)
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/optimization/automatic.py", line 265, in _optimizer_step
    call._call_lightning_module_hook(
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/trainer/call.py", line 157, in _call_lightning_module_hook
    output = fn(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/hgann/HGANN/src/models/tagging_module_test.py", line 252, in optimizer_step
    optimizer.step(closure=optimizer_closure)
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/core/optimizer.py", line 151, in step
    step_output = self._strategy.optimizer_step(self._optimizer, closure, **kwargs)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/strategies/ddp.py", line 265, in optimizer_step
    optimizer_output = super().optimizer_step(optimizer, closure, model, **kwargs)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/strategies/strategy.py", line 230, in optimizer_step
    return self.precision_plugin.optimizer_step(optimizer, model=model, closure=closure, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/plugins/precision/precision.py", line 117, in optimizer_step
    return optimizer.step(closure=closure, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/optim/lr_scheduler.py", line 75, in wrapper
    return wrapped(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/optim/optimizer.py", line 385, in wrapper
    out = func(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/optim/optimizer.py", line 76, in _use_grad
    ret = func(self, *args, **kwargs)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/optim/adam.py", line 146, in step
    loss = closure()
           ^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/plugins/precision/precision.py", line 104, in _wrap_closure
    closure_result = closure()
                     ^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/optimization/automatic.py", line 140, in __call__
    self._result = self.closure(*args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/utils/_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/optimization/automatic.py", line 126, in closure
    step_output = self._step_fn()
                  ^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/loops/optimization/automatic.py", line 315, in _training_step
    training_step_output = call._call_strategy_hook(trainer, "training_step", *kwargs.values())
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/trainer/call.py", line 309, in _call_strategy_hook
    output = fn(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/strategies/strategy.py", line 381, in training_step
    return self._forward_redirection(self.model, self.lightning_module, "training_step", *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/pytorch_lightning/strategies/strategy.py", line 633, in __call__
    wrapper_output = wrapper_module(*args, **kwargs)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/nn/parallel/distributed.py", line 1519, in forward
    inputs, kwargs = self._pre_forward(*inputs, **kwargs)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data/home/acw572/.conda/envs/hgann/lib/python3.12/site-packages/torch/nn/parallel/distributed.py", line 1413, in _pre_forward
    if torch.is_grad_enabled() and self.reducer._rebuild_buckets():
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
RuntimeError: It looks like your LightningModule has parameters that were not used in producing the loss returned by training_step. If this is intentional, you must enable the detection of unused parameters in DDP, either by setting the string value `strategy='ddp_find_unused_parameters_true'` or by setting the flag in the strategy with `strategy=DDPStrategy(find_unused_parameters=True)`.
[rank: 1] Child process with PID 23465 terminated with code 1. Forcefully terminating all other processes to avoid zombies 🧟
/opt/sge_spool/8.6.12b/rdg8/job_scripts/3790272: line 18: 23050 Killed                  HYDRA_FULL_ERROR=1 python src/train.py trainer.max_epochs=50 trainer.devices=2
